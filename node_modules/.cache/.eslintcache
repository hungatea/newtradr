[{"/Users/andrewhungate/Documents/GitHub/newtradr/src/index.js":"1","/Users/andrewhungate/Documents/GitHub/newtradr/src/App.js":"2","/Users/andrewhungate/Documents/GitHub/newtradr/src/reportWebVitals.js":"3","/Users/andrewhungate/Documents/GitHub/newtradr/src/TextAnswer.js":"4","/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/ContactUs.js":"5","/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/Home.js":"6","/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/index.js":"7","/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/AboutUs.js":"8","/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/NavigationBar.js":"9","/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/Question.js":"10","/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/Survey.js":"11","/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/Advice.js":"12"},{"size":500,"mtime":1634952689330,"results":"13","hashOfConfig":"14"},{"size":658,"mtime":1635061894779,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1634952689331,"results":"16","hashOfConfig":"14"},{"size":656,"mtime":1635008353404,"results":"17","hashOfConfig":"14"},{"size":343,"mtime":1635057119000,"results":"18","hashOfConfig":"14"},{"size":501,"mtime":1635059945718,"results":"19","hashOfConfig":"14"},{"size":247,"mtime":1635057119000,"results":"20","hashOfConfig":"14"},{"size":2545,"mtime":1635061348994,"results":"21","hashOfConfig":"14"},{"size":917,"mtime":1635061297362,"results":"22","hashOfConfig":"14"},{"size":6226,"mtime":1635051167109,"results":"23","hashOfConfig":"14"},{"size":4934,"mtime":1635062038881,"results":"24","hashOfConfig":"14"},{"size":5715,"mtime":1635056876051,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"7ptfms",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/Users/andrewhungate/Documents/GitHub/newtradr/src/index.js",[],["54","55"],"/Users/andrewhungate/Documents/GitHub/newtradr/src/App.js",["56"],"/Users/andrewhungate/Documents/GitHub/newtradr/src/reportWebVitals.js",[],"/Users/andrewhungate/Documents/GitHub/newtradr/src/TextAnswer.js",[],"/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/ContactUs.js",["57"],"import React from \"react\";\nimport logo from '../newtradr-logo.svg';\n\nfunction ContactUs() {\n    return (\n        <>\n        <div className='ContactUs'> \n          <h2>Contact Us:</h2>\n          <h1>Phone: (415)-741-9659</h1> \n          <h1>Email: administrator@newtradr.com</h1>\n        </div>\n        </>\n      );\n}\n\nexport default ContactUs;","/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/Home.js",["58"],"/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/index.js",[],"/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/AboutUs.js",[],"/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/NavigationBar.js",["59"],"/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/Question.js",["60","61","62"],"import React, { useState, useEffect, useRef } from \"react\";\nimport Advice from './Advice.js';\n\n//images\n\nimport Tree from './Tree_88398.png'\nimport Film from './Film_1043323.png'\nimport Space from './Space_4038095.png'\nimport Social from './Social_4337981.png'\nimport iPhone from './iPhone_4051913.png'\nimport Car from './Car_2603312.png'\nimport Healthcare from './Healthcare_2135212.png'\nimport Hiking from './Hiking_4303095.png'\nimport Finance from './finance_998012.png'\nimport Gas from './Gas_3553248.png'\nimport House from './House_3074794.png'\nimport Shop from './Shop_2729655.png'\n\nconst icons = [\n  Car,\n  Shop,\n  Hiking,\n  Film,\n  Tree,\n  Finance,\n  Gas,\n  Healthcare,\n  House,\n  Social,\n  Space,\n  iPhone\n]\n\nexport default function Question(props) {\n\n    const [selected, setSelected] = useState(false);\n    const [invest, setInvest] = useState(0);\n    const [save, setSave] = useState(0);\n    const [answer, setAnswer] = useState('');\n    const [multiAnswer, setMultiAnswer] = useState([]);\n    const [name, setName] = useState('');\n\n    const [conservative, setConservative] = useState(0);\n    const [moderate, setModerate] = useState(0);\n    const [aggressive, setAggressive] = useState(0);\n\n    const inputRef = useRef();\n\n    const grid = props['question']['layout'] === 'grid';\n    const image = props['question']['layout'] === 'imageGrid';\n\n\n    function handleKeyPress(event) {\n      if (event.which === 13 && selected) {\n        if (props['question']['id'] === 1) {\n          setName(inputRef.current.value)\n        }\n        else if (props['question']['id'] === 2) {\n          setSave(inputRef.current.value)\n        } else if (props['question']['id'] === 3) {\n          setInvest(inputRef.current.value)\n        }\n        if (props['question']['id'] > 3) {\n        setConservative(conservative + answer['risk'][2]);\n        setModerate(moderate + answer['risk'][1]);\n        setAggressive(aggressive + answer['risk'][0]);\n        }\n        props.onQuestionChange(1);\n        if (props['question']['id'] < 3) {\n          inputRef.current.value = '';\n        }\n        setSelected(false);\n      } else if (event.which === 13 && props['question']['type'] === 'noResponse') {\n        props.onQuestionChange(1);\n      } else if (event.which === 13 && multiAnswer.length === 3) {\n        props.onQuestionChange(1);\n      }\n    }\n\n    function handleResponseChange(event) {\n      if (event.target.value !== '') {\n        setAnswer(event.target.value);\n        setSelected(true)\n      } else {\n        setSelected(false);\n      }\n    }\n\n    function removeArray(array, el) {\n      const array2 = array.filter(e => e !== el);\n      return array2;\n    }\n\n    function addArray(array, el) {\n      const array3 = [ ... array, el];\n      return array3;\n    }\n\n    function maxRisk(array) {\n      let max = Math.max(...array);\n      return array.indexOf(max);\n    }\n\n    function handleResponseClick(x) {\n      if (image) {\n        if (multiAnswer.includes(x)) {\n          setMultiAnswer(removeArray(multiAnswer,x));\n          setSelected(false);\n        } else {\n          if (multiAnswer.length === 2) {\n            setMultiAnswer(addArray(multiAnswer,x))\n            setSelected(true);\n          } else if (multiAnswer.length < 2) {\n            setMultiAnswer(addArray(multiAnswer,x))\n          }\n        }\n      }\n      else if (!image) {\n      if (answer !== x) {\n        \n        setAnswer(x);\n        setSelected(true)\n      }\n      else {\n        setAnswer('');\n        setSelected(false)\n      }\n    }\n    }\n\n    function handleStartOver() {\n      setSelected(false);\n      setInvest(0);\n      setSave(0);\n      setAnswer('');\n      setMultiAnswer([]);\n      setName('');\n\n      setConservative(0);\n      setModerate(0);\n      setAggressive(0);\n    }\n\n    useEffect(() => {\n      window.addEventListener(\"keydown\", handleKeyPress);\n      return () => {\n        window.removeEventListener(\"keydown\", handleKeyPress)\n      }\n    })\n\n\n\n  return (\n\n    <div className='q-container'>\n      <button onClick={(e) => {\n        props.onQuestionChange(0)\n        handleStartOver();\n        e.preventDefault();\n      }}>Start Over</button>\n\n      {props['question']['id'] < 14 &&\n      <>\n      <h2>{`${props['question']['question']} ${props['question']['id'] === 5 ? `$${Math.round(invest / 10)}?` : ''}`}</h2>\n    {props['question']['type'] === 'textResponse' &&\n        <>\n\n        <input className='text-answer' autoFocus type='text' ref={inputRef} name='name' onKeyPress={(event) => {\n        if (props['question']['id'] === 2 || props['question']['id'] === 3) {\n        if (!/[0-9]/.test(event.key)) {\n          event.preventDefault();\n        }}\n      }} onChange={handleResponseChange}\n          placeholder={`${props['question']['id'] > 1 ? '$0' : 'Type your response here...'}`}/>\n        </>\n    }\n    {props['question']['type'] !== 'textResponse' &&\n    <div className={`${(grid || image) ? 'grid-container' : 'column-container'}`}>\n        {props['question']['options'].map((o, index) => {\n            return <>\n              <div className={`${(grid || image) ? 'grid-option' : 'column-option'}\n                               ${(answer === o || multiAnswer.includes(o)) ? 'selected' : ''}`} key={index} onClick={(e) => {\n              e.preventDefault();\n              handleResponseClick(o)\n            }}>\n                {image ?\n                <>\n                <img className='icon' src={icons[index]} />\n                <p>{o}</p>\n                </>\n                :\n                <p>{o['text']}</p>\n        }\n                </div>\n                </>\n        })}\n    </div>\n    }\n    <div className={`help-text-container ${(selected === false && props['question']['type'] !== 'noResponse') && 'unselected'}`}>\n      <div className='help-text'>\n      <p style={{marginRight:\"8px\"}}>Press</p>\n      </div>\n      <div  style={{marginRight:\"8px\"}} className='highlighted'>\n        <p>Enter</p>\n      </div>\n      <div className='help-text'>\n      <p style={{marginRight:\"0px\"}}>to continue</p>\n      </div>\n      </div>\n    </>\n    }\n    {props['question']['id'] === 14 &&\n    <Advice name={name} risk={maxRisk([conservative,moderate,aggressive])} interests={multiAnswer}/>\n    }\n    </div>\n  );\n}","/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/Survey.js",[],"/Users/andrewhungate/Documents/GitHub/newtradr/src/Components/Advice.js",["63"],"import React, { useState, useEffect } from \"react\";\nimport SP500 from './SP500.json';\n\nexport default function Advice(props) {\n\n    const [expand1, setExpand1] = useState(false);\n    const [expand2, setExpand2] = useState(false);\n    const [expand3, setExpand3] = useState(false);\n\n    const riskLevels = ['small', 'moderate', 'healthy']\n    const riskJSON = ['Conservative', 'Moderate', 'Aggressive']\n    const risk = riskLevels[props.risk];\n\n    const company1 = SP500[riskJSON[props.risk]].find(s => s['Sector'] === props.interests[0])\n    const company2 = SP500[riskJSON[props.risk]].find(s => s['Sector'] === props.interests[1])\n    const company3 = SP500[riskJSON[props.risk]].find(s => s['Sector'] === props.interests[2])\n\n    const riskLevels2 = [\n        'match market returns, on average. These stocks may vary from day-to-day, but over time should show healthy, moderate growth.',\n        'do a bit better than the market, on average. Like all stocks, these will vary from day-to-day, but can be expected to have moderate returns over the long-term.',\n        'can deliver high returns. In the long run, these companies can perform very well, but they may have more volatility and it will be important to be watchful of general market conditions.'\n    ]\n\n    const riskP = riskLevels2[props.risk];\n\n  return (\n    <>\n    <div className='advice-container'>\n      <h2>{`Thanks, ${props.name}!`}</h2>\n      <br/>\n      <h2>{`Based on your responses, you are ready to\n            take on a ${risk} amount of risk.`}</h2>\n      <p className='advice'>{`You will be best off investing in companies that ${riskP}`}\n      </p>\n      <br/>\n      <p className='advice'>\n      Here are a few companies to check out based on your interests and risk appetite. Click on a company to learn more or click the button below when you are ready to invest!\n      </p>\n      <div className='button'>\n          <a href='https://www.blackrock.com/us/individual' target='blank'>\n          <button className='invest-button'>Start Investing</button>\n          </a>\n          </div>\n      <div className='company' onClick={() => {\n          setExpand1(!expand1)\n      }}>\n          <div className='company-third'>\n              <div className='company-ticker'>\n                  {company1['Symbol']}\n              </div>\n              <div className='company-name'>\n                  {company1['Name']}\n              </div>\n          </div>\n          <div className='company-more'>\n              {`${expand1 ? 'Read Less' : 'Read More'}`}\n          </div>\n          <div className='company-right'>\n              <div className='company-ticker'>\n                  $100\n              </div>\n              <div className='company-name'>\n                  Current Price\n              </div>\n          </div>\n      </div>\n      {expand1 &&\n      <div className='company-detail'>\n          <div className='company-desc'>\n              {`${company1['Name']} is a ${company1['Description']} with a market capitalization of $${company1['Market Capitalization']}\n                and year-to-date gains of ${company1['1-Year % Growth']}%`}\n          </div>\n    </div>\n        }\n        \n        <div className='company' onClick={() => {\n          setExpand2(!expand2)\n      }}>\n          <div className='company-third'>\n              <div className='company-ticker'>\n                  {company2['Symbol']}\n              </div>\n              <div className='company-name'>\n                  {company2['Name']}\n              </div>\n          </div>\n          <div className='company-more'>\n          {`${expand2 ? 'Read Less' : 'Read More'}`}\n          </div>\n          <div className='company-right'>\n              <div className='company-ticker'>\n                  $100\n              </div>\n              <div className='company-name'>\n                  Current Price\n              </div>\n          </div>\n      </div>\n      {expand2 &&\n      <div className='company-detail'>\n          <div className='company-desc'>\n              {`${company2['Name']} is a ${company2['Description']} with a market capitalization of $${company2['Market Capitalization']}\n                and year-to-date gains of ${company2['1-Year % Growth']}%`}\n          </div>\n    </div>\n        }\n        <div className='company' onClick={() => {\n          setExpand3(!expand3)\n      }}>\n          <div className='company-third'>\n              <div className='company-ticker'>\n                  {company3['Symbol']}\n              </div>\n              <div className='company-name'>\n                  {company3['Name']}\n              </div>\n          </div>\n          <div className='company-more'>\n          {`${expand3 ? 'Read Less' : 'Read More'}`}\n          </div>\n          <div className='company-right'>\n              <div className='company-ticker'>\n                  $100\n              </div>\n              <div className='company-name'>\n                  Current Price\n              </div>\n          </div>\n      </div>\n      {expand3 &&\n      <div className='company-detail'>\n          <div className='company-desc'>\n              {`${company3['Name']} is a ${company3['Description']} with a market capitalization of $${company3['Market Capitalization']}\n                and year-to-date gains of ${company3['1-Year % Growth']}%`}\n          </div>\n    </div>\n        }\n        \n        </div>\n        <p className='details' style={{marginTop:'500px'}}>\n            Companies are suggested on the basis of weighted risk profile factors as well as quantitative signals including but not limited to: moving day averages, standard deviations of price movements, stochastic oscillators, and YTD performance benchmarked against the SPX. \n        </p>\n    </>\n  );\n\n}\n\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":10,"column":8,"nodeType":"70","messageId":"71","endLine":10,"endColumn":17},{"ruleId":"68","severity":1,"message":"72","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":12},{"ruleId":"68","severity":1,"message":"73","line":2,"column":16,"nodeType":"70","messageId":"71","endLine":2,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":26,"column":9,"nodeType":"76","endLine":26,"endColumn":44},{"ruleId":"68","severity":1,"message":"77","line":38,"column":12,"nodeType":"70","messageId":"71","endLine":38,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":95,"column":27,"nodeType":"80","messageId":"81","endLine":95,"endColumn":28,"fix":"82"},{"ruleId":"74","severity":1,"message":"75","line":188,"column":17,"nodeType":"76","endLine":188,"endColumn":60},{"ruleId":"68","severity":1,"message":"83","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'ContactUs' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'save' is assigned a value but never used.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"86","text":"87"},"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",[2727,2728],""]