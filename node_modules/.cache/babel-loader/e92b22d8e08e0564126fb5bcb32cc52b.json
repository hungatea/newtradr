{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhungate/Documents/GitHub/newtradr/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./newtradr-logo.svg\";\nimport Question from './Question.js';\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [completed, setCompleted] = useState(false);\n  const [question, setQuestion] = useState(() => {\n    const saved = localStorage.getItem(\"progress\");\n    const initialValue = JSON.parse(saved);\n    return initialValue || 0;\n  });\n\n  function handleQuestionChange(x) {\n    if (x === 1) {\n      setQuestion(question + x);\n    } else {\n      setQuestion(0);\n    }\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"progress\", JSON.stringify(question));\n  }, [question]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: /*#__PURE__*/_jsxDEV(Question, {\n        question: sampleQuestion[question],\n        onQuestionChange: handleQuestionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"zWGYmWAxKKjPAAD325AXT6gUJWw=\");\n\n_c = App;\nexport default App;\nconst sampleQuestion = [{\n  'id': 1,\n  'question': 'What is your name?',\n  'type': 'textResponse',\n  'layout': '',\n  'options': []\n}, {\n  'id': 1,\n  'question': 'How much money do you have saved?',\n  'type': 'textResponse',\n  'layout': '',\n  'options': []\n}, {\n  'id': 1,\n  'question': 'How much money are you interested in investing?',\n  'type': 'textResponse',\n  'layout': '',\n  'options': []\n}, {\n  'id': 2,\n  'question': 'A friend asks you to bet on the flip of a coin. Heads, you win $100. Tails, you lose $100. Do you...',\n  'type': 'selectResponse',\n  'layout': 'grid',\n  'options': ['Take the bet—why not make some extra money!', \"Walk away—it's not worth the risk\"]\n}, {\n  'id': 3,\n  'question': 'How would others describe your driving?',\n  'type': 'selectResponse',\n  'layout': 'column',\n  'options': ['Slow and safe', 'Normal, maybe a bit on the slow side', 'A little bit fast', 'Probably too fast for most people', \"I don't drive\"]\n}, {\n  'id': 4,\n  'question': 'How important is it to you that you have a lot of money when you are older?',\n  'type': 'selectResponse',\n  'layout': 'column',\n  'options': ['Very—I aim to have an expensive lifestyle.', 'Somewhat—I want to make sure I can live where I want.', 'A bit—I do not want to worry about money.', 'Not very much, so long as I am doing what makes me happy.']\n}, {\n  'id': 5,\n  'question': 'How would you describe your typing speed?',\n  'type': 'selectResponse',\n  'layout': 'column',\n  'options': ['To infinity and beyond (over 100 words per minute)', 'Average (between 60 and 100 words per minute)', 'Meh (less than 60 words per minute)']\n}, {\n  'id': 5,\n  'question': 'How often do you leave work undone until your deadline?',\n  'type': 'selectResponse',\n  'layout': 'column',\n  'options': ['Always.', 'Pretty often.', 'Never.']\n}, {\n  'id': 6,\n  'question': \"What are some things that you're interested in? Please choose three.\",\n  'type': 'selectResponse',\n  'layout': 'imageGrid',\n  'options': [\"Biology\", \"Cars\", \"Cryptocurrency\", \"Education\", \"Environment\", \"Fashion\", \"Food\", \"Healthcare\", \"Hiking\", \"Music\", \"Social Media\", \"Space\", \"Tech\", \"TV & Movies\", \"Video Games\"]\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/andrewhungate/Documents/GitHub/newtradr/src/App.js"],"names":["Question","React","useState","useEffect","App","completed","setCompleted","question","setQuestion","saved","localStorage","getItem","initialValue","JSON","parse","handleQuestionChange","x","setItem","stringify","sampleQuestion","logo"],"mappings":"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","sourcesContent":["import logo from './newtradr-logo.svg';\nimport Question from './Question.js';\nimport React, { useState, useEffect } from \"react\";\n\n\n\n\nfunction App() {\n\n  const [completed, setCompleted] = useState(false);\n  const [question, setQuestion] = useState(() => {\n    const saved = localStorage.getItem(\"progress\");\n    const initialValue = JSON.parse(saved);\n    return initialValue || 0;\n  })\n\n  function handleQuestionChange(x) {\n    if (x === 1) {\n    setQuestion(question + x);\n    } else {\n      setQuestion(0)\n    }\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"progress\", JSON.stringify(question))\n  }, [question]);\n\n  return (\n    <>\n    <div className='main-container'>\n      <Question question={sampleQuestion[question]} onQuestionChange={handleQuestionChange}/>\n    </div>\n    <img src={logo} className='logo' />\n    </>\n  );\n}\n\nexport default App;\n\nconst sampleQuestion = [\n{\n  'id' : 1,\n  'question' : 'What is your name?',\n  'type' : 'textResponse',\n  'layout' : '',\n  'options' : []\n},\n{\n  'id' : 1,\n  'question' : 'How much money do you have saved?',\n  'type' : 'textResponse',\n  'layout' : '',\n  'options' : []\n},\n{\n  'id' : 1,\n  'question' : 'How much money are you interested in investing?',\n  'type' : 'textResponse',\n  'layout' : '',\n  'options' : []\n},\n{\n  'id' : 2,\n  'question' : 'A friend asks you to bet on the flip of a coin. Heads, you win $100. Tails, you lose $100. Do you...',\n  'type' : 'selectResponse',\n  'layout' : 'grid',\n  'options' : ['Take the bet—why not make some extra money!', \"Walk away—it's not worth the risk\"]\n},\n{\n  'id' : 3,\n  'question' : 'How would others describe your driving?',\n  'type' : 'selectResponse',\n  'layout' : 'column',\n  'options' : [\n    'Slow and safe',\n    'Normal, maybe a bit on the slow side',\n    'A little bit fast',\n    'Probably too fast for most people',\n    \"I don't drive\"\n  ]  \n},\n{\n    'id': 4,\n    'question' : 'How important is it to you that you have a lot of money when you are older?',\n    'type' : 'selectResponse',\n    'layout' : 'column',\n    'options' : [\n      'Very—I aim to have an expensive lifestyle.',\n      'Somewhat—I want to make sure I can live where I want.',\n      'A bit—I do not want to worry about money.',\n      'Not very much, so long as I am doing what makes me happy.'\n  ]\n},\n{\n  'id': 5,\n  'question' : 'How would you describe your typing speed?',\n  'type' : 'selectResponse',\n  'layout' : 'column',\n  'options' : [\n    'To infinity and beyond (over 100 words per minute)',\n    'Average (between 60 and 100 words per minute)',\n    'Meh (less than 60 words per minute)'\n]\n},\n{\n  'id': 5,\n  'question' : 'How often do you leave work undone until your deadline?',\n  'type' : 'selectResponse',\n  'layout' : 'column',\n  'options' : [\n    'Always.',\n    'Pretty often.',\n    'Never.'\n]\n},\n{\n  'id': 6,\n  'question' : \"What are some things that you're interested in? Please choose three.\",\n  'type' : 'selectResponse',\n  'layout' : 'imageGrid',\n  'options' : [\n\"Biology\",\n\"Cars\",\n\"Cryptocurrency\",\n\"Education\",\n\"Environment\",\n\"Fashion\",\n\"Food\",\n\"Healthcare\",\n\"Hiking\",\n\"Music\",\n\"Social Media\",\n\"Space\",\n\"Tech\",\n\"TV & Movies\",\n\"Video Games\"\n]\n},\n]"]},"metadata":{},"sourceType":"module"}