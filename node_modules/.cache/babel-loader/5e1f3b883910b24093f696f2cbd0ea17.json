{"ast":null,"code":"import _slicedToArray from\"/Users/andrewhungate/Documents/GitHub/newtradr/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Question(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),answer=_useState4[0],setAnswer=_useState4[1];var grid=props['question']['layout']==='grid';function handleKeyPress(event){if(event.which===13&&selected){props.onQuestionChange();setSelected(false);}}function handleResponseChange(event){if(event.target.value!==''){setSelected(true);}else{setSelected(false);}}function handleResponseClick(x){if(answer!==x){setAnswer(x);}else{setAnswer('');}setSelected(!selected);}useEffect(function(){window.addEventListener(\"keydown\",handleKeyPress);return function(){window.removeEventListener(\"keydown\",handleKeyPress);};});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"q-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:props['question']['question']}),props['question']['type']==='textResponse'&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"input\",{className:\"text-answer\",autoFocus:true,type:\"text\",name:\"name\",onChange:handleResponseChange,placeholder:\"Type your response here...\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(grid?'grid-container':'column-container'),children:props['question']['options'].map(function(o){return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(grid?'grid-option':'column-option'),onClick:function onClick(){handleResponseClick(o);},children:/*#__PURE__*/_jsx(\"p\",{children:o})},o);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"help-text-container \".concat(selected===false&&'unselected'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"help-text\",children:/*#__PURE__*/_jsx(\"p\",{style:{marginRight:\"8px\"},children:\"Press\"})}),/*#__PURE__*/_jsx(\"div\",{style:{marginRight:\"8px\"},className:\"highlighted\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Enter\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"help-text\",children:/*#__PURE__*/_jsx(\"p\",{style:{marginRight:\"0px\"},children:\"to continue\"})})]})]})});}","map":{"version":3,"sources":["/Users/andrewhungate/Documents/GitHub/newtradr/src/Question.js"],"names":["React","useState","useEffect","Question","props","selected","setSelected","answer","setAnswer","grid","handleKeyPress","event","which","onQuestionChange","handleResponseChange","target","value","handleResponseClick","x","window","addEventListener","removeEventListener","map","o","marginRight"],"mappings":"iIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,C,6IAEA,cAAe,SAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CAEpC,cAAgCH,QAAQ,CAAC,KAAD,CAAxC,wCAAOI,QAAP,eAAiBC,WAAjB,eACA,eAA4BL,QAAQ,CAAC,EAAD,CAApC,yCAAOM,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,IAAI,CAAGL,KAAK,CAAC,UAAD,CAAL,CAAkB,QAAlB,IAAgC,MAA7C,CAEA,QAASM,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAC7B,GAAIA,KAAK,CAACC,KAAN,GAAgB,EAAhB,EAAsBP,QAA1B,CAAoC,CAClCD,KAAK,CAACS,gBAAN,GACAP,WAAW,CAAC,KAAD,CAAX,CACD,CACF,CAED,QAASQ,CAAAA,oBAAT,CAA8BH,KAA9B,CAAqC,CACnC,GAAIA,KAAK,CAACI,MAAN,CAAaC,KAAb,GAAuB,EAA3B,CAA+B,CAC7BV,WAAW,CAAC,IAAD,CAAX,CACD,CAFD,IAEO,CACLA,WAAW,CAAC,KAAD,CAAX,CACD,CACF,CAED,QAASW,CAAAA,mBAAT,CAA6BC,CAA7B,CAAgC,CAC9B,GAAIX,MAAM,GAAKW,CAAf,CAAkB,CAChBV,SAAS,CAACU,CAAD,CAAT,CACD,CAFD,IAEO,CACLV,SAAS,CAAC,EAAD,CAAT,CACD,CACDF,WAAW,CAAC,CAACD,QAAF,CAAX,CACD,CAEDH,SAAS,CAAC,UAAM,CACdiB,MAAM,CAACC,gBAAP,CAAwB,SAAxB,CAAmCV,cAAnC,EACA,MAAO,WAAM,CACXS,MAAM,CAACE,mBAAP,CAA2B,SAA3B,CAAsCX,cAAtC,EACD,CAFD,CAGD,CALQ,CAAT,CAOF,mBACE,sCACA,aAAK,SAAS,CAAC,aAAf,wBACE,oBAAKN,KAAK,CAAC,UAAD,CAAL,CAAkB,UAAlB,CAAL,EADF,CAECA,KAAK,CAAC,UAAD,CAAL,CAAkB,MAAlB,IAA8B,cAA9B,eACD,sCACI,cAAO,SAAS,CAAC,aAAjB,CAA+B,SAAS,KAAxC,CAAyC,IAAI,CAAC,MAA9C,CAAqD,IAAI,CAAC,MAA1D,CAAiE,QAAQ,CAAEU,oBAA3E,CACE,WAAW,CAAC,4BADd,EADJ,EAHA,cAQA,YAAK,SAAS,WAAKL,IAAI,CAAG,gBAAH,CAAsB,kBAA/B,CAAd,UACKL,KAAK,CAAC,UAAD,CAAL,CAAkB,SAAlB,EAA6BkB,GAA7B,CAAiC,SAAAC,CAAC,CAAI,CACnC,mBAAO,YAAK,SAAS,WAAKd,IAAI,CAAG,aAAH,CAAmB,eAA5B,CAAd,CAAqE,OAAO,CAAE,kBAAM,CACzFQ,mBAAmB,CAACM,CAAD,CAAnB,CACD,CAFM,uBAGH,mBAAIA,CAAJ,EAHG,EAAkEA,CAAlE,CAAP,CAKH,CANA,CADL,EARA,cAkBA,aAAK,SAAS,+BAAyBlB,QAAQ,GAAK,KAAb,EAAsB,YAA/C,CAAd,wBACE,YAAK,SAAS,CAAC,WAAf,uBACA,UAAG,KAAK,CAAE,CAACmB,WAAW,CAAC,KAAb,CAAV,mBADA,EADF,cAIE,YAAM,KAAK,CAAE,CAACA,WAAW,CAAC,KAAb,CAAb,CAAkC,SAAS,CAAC,aAA5C,uBACE,4BADF,EAJF,cAOE,YAAK,SAAS,CAAC,WAAf,uBACA,UAAG,KAAK,CAAE,CAACA,WAAW,CAAC,KAAb,CAAV,yBADA,EAPF,GAlBA,GADA,EADF,CAkCD","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function Question(props) {\n\n    const [selected, setSelected] = useState(false);\n    const [answer, setAnswer] = useState('');\n\n    const grid = props['question']['layout'] === 'grid';\n\n    function handleKeyPress(event) {\n      if (event.which === 13 && selected) {\n        props.onQuestionChange();\n        setSelected(false);\n      }\n    }\n\n    function handleResponseChange(event) {\n      if (event.target.value !== '') {\n        setSelected(true)\n      } else {\n        setSelected(false);\n      }\n    }\n\n    function handleResponseClick(x) {\n      if (answer !== x) {\n        setAnswer(x);\n      } else {\n        setAnswer('');\n      }\n      setSelected(!selected);\n    }\n\n    useEffect(() => {\n      window.addEventListener(\"keydown\", handleKeyPress);\n      return () => {\n        window.removeEventListener(\"keydown\", handleKeyPress)\n      }\n    })\n\n  return (\n    <>\n    <div className='q-container'>\n      <h2>{props['question']['question']}</h2>\n    {props['question']['type'] === 'textResponse' &&\n    <>\n        <input className='text-answer' autoFocus type='text' name='name' onChange={handleResponseChange}\n          placeholder='Type your response here...' />\n      </>\n    }\n    <div className={`${grid ? 'grid-container' : 'column-container'}`}>\n        {props['question']['options'].map(o => {\n            return <div className={`${grid ? 'grid-option' : 'column-option'}`} key={o} onClick={() => {\n              handleResponseClick(o)\n            }}>\n                <p>{o}</p>\n                </div>\n        })}\n    </div>\n\n    <div className={`help-text-container ${selected === false && 'unselected'}`}>\n      <div className='help-text'>\n      <p style={{marginRight:\"8px\"}}>Press</p>\n      </div>\n      <div  style={{marginRight:\"8px\"}} className='highlighted'>\n        <p>Enter</p>\n      </div>\n      <div className='help-text'>\n      <p style={{marginRight:\"0px\"}}>to continue</p>\n      </div>\n      </div>\n    </div>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}