{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhungate/Documents/GitHub/newtradr/src/Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //images\n\nimport Tree from './Tree_88398.png';\nimport Banana from './banana_1262865.png';\nimport Clothes from './Clothes_552721.png';\nimport Game from './Video_Game_4146469.png';\nimport Film from './Film_1043323.png';\nimport Biology from './Biology_3655198.png';\nimport Space from './Space_4038095.png';\nimport Social from './Social_4337981.png';\nimport iPhone from './iPhone_4051913.png';\nimport Crypto from './crypto_3663299.png';\nimport Education from './education_3401411.png';\nimport Car from './Car_2603312.png';\nimport Healthcare from './Healthcare_2135212.png';\nimport Music from './Music_4341623.png';\nimport Hiking from './Hiking_4303095.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst icons = [Biology, Car, Crypto, Education, Tree, Clothes, Banana, Healthcare, Hiking, Music, Social, Space, iPhone, Film, Game];\nexport default function Question(props) {\n  _s();\n\n  const [selected, setSelected] = useState(false);\n  const [risk, setRisk] = useState(0);\n  const [answer, setAnswer] = useState('');\n  const [multiAnswer, setMultiAnswer] = useState([]);\n  const grid = props['question']['layout'] === 'grid';\n  const image = props['question']['layout'] === 'imageGrid';\n\n  function handleKeyPress(event) {\n    if (event.which === 13 && selected) {\n      props.onQuestionChange(1);\n      setSelected(false);\n    }\n  }\n\n  function handleResponseChange(event) {\n    if (event.target.value !== '') {\n      setAnswer(event.target.value);\n      setSelected(true);\n    } else {\n      setSelected(false);\n    }\n  }\n\n  function removeArray(array, el) {\n    const array2 = array.filter(e => e !== el);\n    return array2;\n  }\n\n  function addArray(array, el) {\n    const array3 = [...array, el];\n    return array3;\n  }\n\n  function handleResponseClick(x) {\n    if (image) {\n      if (multiAnswer.includes(x)) {\n        setMultiAnswer(removeArray(multiAnswer, x));\n      } else {\n        if (multiAnswer.length === 2) {\n          setMultiAnswer(addArray(multiAnswer, x));\n          setSelected(true);\n        } else if (multiAnswer.length < 2) {\n          setMultiAnswer(addArray(multiAnswer, x));\n        }\n      }\n    } else if (!image) {\n      if (answer !== x) {\n        setAnswer(x);\n        setSelected(true);\n      } else {\n        setAnswer('');\n        setSelected(false);\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"q-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props['question']['question']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), props['question']['type'] === 'textResponse' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-answer\",\n          autoFocus: true,\n          type: \"text\",\n          name: \"name\",\n          onChange: handleResponseChange,\n          placeholder: \"Type your response here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${grid || image ? 'grid-container' : 'column-container'}`,\n        children: props['question']['options'].map((o, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${grid || image ? 'grid-option' : 'column-option'}\n                               ${answer === o || multiAnswer.includes(o) ? 'selected' : ''}`,\n                onClick: e => {\n                  e.preventDefault();\n                  handleResponseClick(o);\n                },\n                children: [image && /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"icon\",\n                  src: icons[index]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: o\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 17\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `help-text-container ${selected === false && 'unselected'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-text\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginRight: \"8px\"\n            },\n            children: \"Press\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: \"8px\"\n          },\n          className: \"highlighted\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-text\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginRight: \"0px\"\n            },\n            children: \"to continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Question, \"sAyqEHehSH2dXNmImsva7GnmSdo=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/andrewhungate/Documents/GitHub/newtradr/src/Question.js"],"names":["React","useState","useEffect","Tree","Banana","Clothes","Game","Film","Biology","Space","Social","iPhone","Crypto","Education","Car","Healthcare","Music","Hiking","icons","Question","props","selected","setSelected","risk","setRisk","answer","setAnswer","multiAnswer","setMultiAnswer","grid","image","handleKeyPress","event","which","onQuestionChange","handleResponseChange","target","value","removeArray","array","el","array2","filter","e","addArray","array3","handleResponseClick","x","includes","length","window","addEventListener","removeEventListener","map","o","index","preventDefault","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n//images\n\nimport Tree from './Tree_88398.png'\nimport Banana from './banana_1262865.png'\nimport Clothes from './Clothes_552721.png'\nimport Game from './Video_Game_4146469.png'\nimport Film from './Film_1043323.png'\nimport Biology from './Biology_3655198.png'\nimport Space from './Space_4038095.png'\nimport Social from './Social_4337981.png'\nimport iPhone from './iPhone_4051913.png'\nimport Crypto from './crypto_3663299.png'\nimport Education from './education_3401411.png'\nimport Car from './Car_2603312.png'\nimport Healthcare from './Healthcare_2135212.png'\nimport Music from './Music_4341623.png'\nimport Hiking from './Hiking_4303095.png'\n\nconst icons = [\n  Biology,\n  Car,\n  Crypto,\n  Education,\n  Tree,\n\n  Clothes,\n  Banana,\n  Healthcare,\n\n  Hiking,\n  Music,\n  Social,\n  Space,\n  iPhone,\n  Film,\n\n  Game,\n]\n\nexport default function Question(props) {\n\n    const [selected, setSelected] = useState(false);\n    const [risk, setRisk] = useState(0);\n    const [answer, setAnswer] = useState('');\n    const [multiAnswer, setMultiAnswer] = useState([]);\n\n    const grid = props['question']['layout'] === 'grid';\n    const image = props['question']['layout'] === 'imageGrid';\n\n    function handleKeyPress(event) {\n      if (event.which === 13 && selected) {\n        props.onQuestionChange(1);\n        setSelected(false);\n      }\n    }\n\n    function handleResponseChange(event) {\n      if (event.target.value !== '') {\n        setAnswer(event.target.value);\n        setSelected(true)\n      } else {\n        setSelected(false);\n      }\n    }\n\n    function removeArray(array, el) {\n      const array2 = array.filter(e => e !== el);\n      return array2;\n    }\n\n    function addArray(array, el) {\n      const array3 = [ ... array, el];\n      return array3;\n    }\n\n    function handleResponseClick(x) {\n      if (image) {\n        if (multiAnswer.includes(x)) {\n          setMultiAnswer(removeArray(multiAnswer,x));\n        } else {\n          if (multiAnswer.length === 2) {\n            setMultiAnswer(addArray(multiAnswer,x))\n            setSelected(true);\n          } else if (multiAnswer.length < 2) {\n            setMultiAnswer(addArray(multiAnswer,x))\n          }\n        }\n      }\n\n      else if (!image) {\n      if (answer !== x) {\n        setAnswer(x);\n        setSelected(true)\n      } else {\n        setAnswer('');\n        setSelected(false)\n      }\n    }\n    }\n\n    useEffect(() => {\n      window.addEventListener(\"keydown\", handleKeyPress);\n      return () => {\n        window.removeEventListener(\"keydown\", handleKeyPress)\n      }\n    })\n\n  return (\n    <>\n    <div className='q-container'>\n      <h2>{props['question']['question']}</h2>\n    {props['question']['type'] === 'textResponse' &&\n    <>\n        <input className='text-answer' autoFocus type='text' name='name' onChange={handleResponseChange}\n          placeholder='Type your response here...' />\n      </>\n    }\n    <div className={`${(grid || image) ? 'grid-container' : 'column-container'}`}>\n        {props['question']['options'].map((o, index) => {\n            return <>\n            <a href=''>\n              <div className={`${(grid || image) ? 'grid-option' : 'column-option'}\n                               ${(answer === o || multiAnswer.includes(o)) ? 'selected' : ''}`} key={index} onClick={(e) => {\n              e.preventDefault();\n              handleResponseClick(o)\n            }}>\n                {image &&\n                <img className='icon' src={icons[index]} />\n        }\n                <p>{o}</p>\n                </div>\n                </a>\n                </>\n        })}\n    </div>\n\n    <div className={`help-text-container ${selected === false && 'unselected'}`}>\n      <div className='help-text'>\n      <p style={{marginRight:\"8px\"}}>Press</p>\n      </div>\n      <div  style={{marginRight:\"8px\"}} className='highlighted'>\n        <p>Enter</p>\n      </div>\n      <div className='help-text'>\n      <p style={{marginRight:\"0px\"}}>to continue</p>\n      </div>\n      </div>\n    </div>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}