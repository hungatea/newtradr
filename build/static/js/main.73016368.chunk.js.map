{"version":3,"sources":["newtradr-logo.svg","Question.js","App.js","reportWebVitals.js","index.js"],"names":["Question","props","useState","selected","setSelected","answer","setAnswer","grid","handleKeyPress","event","which","onQuestionChange","useEffect","window","addEventListener","removeEventListener","className","autoFocus","type","name","onChange","target","value","placeholder","map","o","onClick","x","style","marginRight","App","question","setQuestion","sampleQuestion","src","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73016368.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/newtradr-logo.8b84c350.svg\";","import React, { useState, useEffect } from \"react\";\n\nexport default function Question(props) {\n\n    const [selected, setSelected] = useState(false);\n    const [answer, setAnswer] = useState('');\n\n    const grid = props['question']['layout'] === 'grid';\n\n    function handleKeyPress(event) {\n      if (event.which === 13 && selected) {\n        props.onQuestionChange();\n        setSelected(false);\n      }\n    }\n\n    function handleResponseChange(event) {\n      if (event.target.value !== '') {\n        setSelected(true)\n      } else {\n        setSelected(false);\n      }\n    }\n\n    function handleResponseClick(x) {\n      if (answer !== x) {\n        setAnswer(x);\n      } else {\n        setAnswer('');\n      }\n      setSelected(!selected);\n    }\n\n    useEffect(() => {\n      window.addEventListener(\"keydown\", handleKeyPress);\n      return () => {\n        window.removeEventListener(\"keydown\", handleKeyPress)\n      }\n    })\n\n  return (\n    <>\n    <div className='q-container'>\n      <h2>{props['question']['question']}</h2>\n    {props['question']['type'] === 'textResponse' &&\n    <>\n        <input className='text-answer' autoFocus type='text' name='name' onChange={handleResponseChange}\n          placeholder='Type your response here...' />\n      </>\n    }\n    <div className={`${grid ? 'grid-container' : 'column-container'}`}>\n        {props['question']['options'].map(o => {\n            return <div className={`${grid ? 'grid-option' : 'column-option'}`} key={o} onClick={() => {\n              handleResponseClick(o)\n            }}>\n                <p>{o}</p>\n                </div>\n        })}\n    </div>\n\n    <div className={`help-text-container ${selected === false && 'unselected'}`}>\n      <div className='help-text'>\n      <p style={{marginRight:\"8px\"}}>Press</p>\n      </div>\n      <div  style={{marginRight:\"8px\"}} className='highlighted'>\n        <p>Enter</p>\n      </div>\n      <div className='help-text'>\n      <p style={{marginRight:\"0px\"}}>to continue</p>\n      </div>\n      </div>\n    </div>\n    </>\n  );\n}","import logo from './newtradr-logo.svg';\nimport Question from './Question.js';\nimport React, { useState } from \"react\";\n\nfunction App() {\n\n  const [completed, setCompleted] = useState(false);\n  const [question, setQuestion] = useState(0);\n\n  function handleQuestionChange() {\n    setQuestion(question + 1);\n  }\n\n  return (\n    <>\n    <div className='main-container'>\n      <Question question={sampleQuestion[question]} onQuestionChange={handleQuestionChange}/>\n    </div>\n    <img src={logo} className='logo' />\n    </>\n  );\n}\n\nexport default App;\n\nconst sampleQuestion = [\n{\n  'id' : 1,\n  'question' : 'What is your name?',\n  'type' : 'textResponse',\n  'layout' : '',\n  'options' : []\n},\n{\n  'id' : 2,\n  'question' : 'A friend asks you to bet on the flip of a coin. Heads, you win $100. Tails, you lose $100. Do you...',\n  'type' : 'selectResponse',\n  'layout' : 'grid',\n  'options' : ['Take the bet—why not make some extra money!', \"Walk away—it's not worth the risk\"]\n},\n{\n  'id' : 3,\n  'question' : 'How would others describe your driving?',\n  'type' : 'selectResponse',\n  'layout' : 'column',\n  'options' : [\n    'Slow and safe',\n    'Normal, maybe a bit on the slow side',\n    'A little bit fast',\n    'Probably too fast for most people',\n    \"I don't drive\"\n  ]  \n},\n{\n    'id': 4,\n    'question' : 'How important is it to you that you have a lot of money when you str older?',\n    'type' : 'selectResponse',\n    'layout' : 'column',\n    'options' : [\n      'Very-I aim to have an expensive lifestyle.',\n      'Somewhat-I want to make sure I can live where I want.',\n      'A bit-I do not want to worry about money.',\n      'Not very much-So long as I am doing what makes me happy.'\n  ]\n},\n{\n  'id': 5,\n  'question' : 'How would you describe your typing speed?',\n  'type' : 'selectResponse',\n  'layout' : 'column',\n  'options' : [\n    'To infinity and beyond(more than 100 word per minute)',\n    'Average (between 60 and 100 words per minute)',\n    'Meh (less than 60 words per minute)'\n]\n},\n{\n  'id': 5,\n  'question' : 'How often do you leave work undone until your deadline?',\n  'type' : 'selectResponse',\n  'layout' : 'column',\n  'options' : [\n    'Always.',\n    'Pretty often.',\n    'Never.'\n]\n},\n{\n  'id': 6,\n  'question' : 'Lets just say current stock has a price of $50 per share, and its value has decreased to $42 per share only. If you sel it right now you will ose 8 dollars. 55% o the market analysts say the price will go up to $100 per share 3 months later, and 45% say it will go down evern futher by 10 dollars per month. What is your move here?',\n  'type' : 'selectResponse',\n  'layout' : 'column',\n  'options' : [\n    'Se it now.',\n    'Find someone on the same boat for ideas.',\n    'Wait till after the second month has passed to monitor the price.',\n    'Wait until the price increases.'\n]\n}\n]\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}